//C_cyp_query delete
//https://github.com/wirsel/neoj/blob/master/cyphers/C_cyp_query/C_cyp_query-delete.cyp.txt
with {identifier: "nodes.level.type > types.type.name", dt: datetime()} as cx

CREATE(lg:C_log {identifier: apoc.convert.toString(cx.dt)})
set lg.name = lg.identifier
set lg.createdAt=cx.dt 
set lg.type="C_log"
set lg.steps=[]
set lg.comments=[]
set lg.steps=lg.steps + [size(lg.steps+1)]
set lg.comments=lg.comments + ["lg created"]
set lg.cx=apoc.convert.toString(cx)

//-----find C_cyp_query ------
with *
OPTIONAL MATCH(cyp:C_cyp_query {identifier:cx.identifier})
with cx, lg,
COLLECT(cyp) as nCyp_list
set lg.steps=lg.steps + [size(lg.steps+1)]
set lg.comments=lg.comments + ["C_cyp_query found = cnt = " +tostring (size(nCyp_list))] 

//-----find C_cyp_line_pos ------
with *
UNWIND nCyp_list as nCyp
OPTIONAL MATCH(nCyp)-[e:HAS_LINE]->(nLp:C_cyp_line_pos)
with cx, lg, nCyp_list,
COLLECT(nLp) as nLp_list
set lg.steps=lg.steps + [size(lg.steps+1)]
set lg.comments=lg.comments + ["C_cyp_line_pos found = cnt = " +tostring (size(nLp_list))] 

with *
CALL apoc.do.when(size(nLp_list)>0,'
with $nodes as nodes
UNWIND  range(0, size(nodes)-1)  as x
with x, nodes[x] as node
detach delete node
with  
COLLECT(x) as coll
return size(coll) as cnt
','return 0 as cnt',{ nodes: nLp_list}) yield value as valuelines
set lg.steps=lg.steps + [size(lg.steps+1)]
set lg.comments=lg.comments + ["C_cyp_line_pos deleted = cnt = " +tostring (valuelines.cnt)] 

with *
CALL apoc.do.when(size(nCyp_list)>0,'
with $nodes as nodes
UNWIND  range(0, size(nodes)-1)  as x
with x, nodes[x] as node
detach delete node
with 
COLLECT(x) as coll
return size(coll) as cnt
','return 0 as cnt',{ nodes: nCyp_list}) yield value as valuequery
set lg.steps=lg.steps + [size(lg.steps+1)]
set lg.comments=lg.comments + ["C_cyp_query deleted = cnt = " +tostring (valuequery.cnt)] 

return 0
