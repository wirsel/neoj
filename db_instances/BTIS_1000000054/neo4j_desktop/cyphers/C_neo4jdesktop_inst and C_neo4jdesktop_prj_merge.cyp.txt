//C_neo4jdesktop_inst + C_neo4jdesktop_prj
//https://github.com/wirsel/neoj/blob/master/db_instances/BTIS_1000000054/neo4j_desktop/cyphers/C_neo4jdesktop_inst%20and%20C_neo4jdesktop_prj_merge.cyp.txt

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//================================C_neo4jdesktop_inst======================================================
with *, "BTIS_1000000054" as device
MERGE( d: C_neo4jdesktop_inst {identifier:device})
set d.type="C_neo4jdesktop_inst"
set d.name=d.identifier
with d

with *, "w:/" as path
With *, "projects.json" as prjFile
with *, "file:///" as protocol

//================================C_neo4jdesktop_prj======================================================
//LOAD CSV FROM protocol+file as line
Call apoc.load.json(protocol+path+prjFile) yield value as map
with *,  keys(map) as project_ids

UNWIND range(0, size(project_ids) -1 ) as x
with *, map[project_ids[x]] as prj_map
MERGE( prj: C_neo4jdesktop_prj {identifier:prj_map.id})
set prj.type="C_neo4jdesktop_prj"
set prj.uuid = replace(prj.identifier,"project-","")
set prj.name=prj_map.name
set prj.createdAt = prj_map.createdAt
MERGE(d)-[r:CONTAINS_PRJ]->(prj)
with COLLECT(prj.identifier) as prjs_id
retrun prjs_id;

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//================================C_neo4j_db_inst======================================================
with "w:/" as path
with *, "databases.json" as dbFile
with *, "file:///" as protocol
Call apoc.load.json(protocol+path+dbFile) yield value as map
with *,  keys(map) as dbs_map

UNWIND range(0, size(dbs_map) -1 ) as x
with *, map[dbs_map[x]] as db_map
MERGE( db: C_neo4j_db_inst {identifier:db_map.id})
set db.type="C_neo4j_db_inst"
set db.uuid = replace(db.identifier,"database-","")
set db.version=db_map.version
set db.edition=db_map.edition
set db.name=db_map.name
set db.description=db_map.description
set db.createdAt = db_map.createdAt
set db.isValidPassword = db_map.isValidPassword
set db.dirtySettings = db_map.dirtySettings
With COLLECT(db.identifier) as dbs_id
return dbs_id;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//================================C_neo4j_db_inst_stat======================================================
